/*
 * This file is generated by jOOQ.
 */
package org.ua.wohnung.bot.persistence.generated.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;
import org.ua.wohnung.bot.persistence.generated.enums.Role;
import org.ua.wohnung.bot.persistence.generated.tables.Account;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AccountRecord extends UpdatableRecordImpl<AccountRecord> implements Record4<Long, Long, String, Role> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>main.account.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>main.account.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>main.account.chat_id</code>.
     */
    public void setChatId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>main.account.chat_id</code>.
     */
    public Long getChatId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>main.account.username</code>.
     */
    public void setUsername(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>main.account.username</code>.
     */
    public String getUsername() {
        return (String) get(2);
    }

    /**
     * Setter for <code>main.account.role</code>.
     */
    public void setRole(Role value) {
        set(3, value);
    }

    /**
     * Getter for <code>main.account.role</code>.
     */
    public Role getRole() {
        return (Role) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, Long, String, Role> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Long, Long, String, Role> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Account.ACCOUNT.ID;
    }

    @Override
    public Field<Long> field2() {
        return Account.ACCOUNT.CHAT_ID;
    }

    @Override
    public Field<String> field3() {
        return Account.ACCOUNT.USERNAME;
    }

    @Override
    public Field<Role> field4() {
        return Account.ACCOUNT.ROLE;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getChatId();
    }

    @Override
    public String component3() {
        return getUsername();
    }

    @Override
    public Role component4() {
        return getRole();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getChatId();
    }

    @Override
    public String value3() {
        return getUsername();
    }

    @Override
    public Role value4() {
        return getRole();
    }

    @Override
    public AccountRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public AccountRecord value2(Long value) {
        setChatId(value);
        return this;
    }

    @Override
    public AccountRecord value3(String value) {
        setUsername(value);
        return this;
    }

    @Override
    public AccountRecord value4(Role value) {
        setRole(value);
        return this;
    }

    @Override
    public AccountRecord values(Long value1, Long value2, String value3, Role value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AccountRecord
     */
    public AccountRecord() {
        super(Account.ACCOUNT);
    }

    /**
     * Create a detached, initialised AccountRecord
     */
    public AccountRecord(Long id, Long chatId, String username, Role role) {
        super(Account.ACCOUNT);

        setId(id);
        setChatId(chatId);
        setUsername(username);
        setRole(role);
    }

    /**
     * Create a detached, initialised AccountRecord
     */
    public AccountRecord(org.ua.wohnung.bot.persistence.generated.tables.pojos.Account value) {
        super(Account.ACCOUNT);

        if (value != null) {
            setId(value.getId());
            setChatId(value.getChatId());
            setUsername(value.getUsername());
            setRole(value.getRole());
        }
    }
}
