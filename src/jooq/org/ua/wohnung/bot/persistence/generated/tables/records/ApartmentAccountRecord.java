/*
 * This file is generated by jOOQ.
 */
package org.ua.wohnung.bot.persistence.generated.tables.records;


import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.TableRecordImpl;
import org.ua.wohnung.bot.persistence.generated.tables.ApartmentAccount;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ApartmentAccountRecord extends TableRecordImpl<ApartmentAccountRecord> implements Record2<Long, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>main.apartment_account.account_id</code>.
     */
    public void setAccountId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>main.apartment_account.account_id</code>.
     */
    public Long getAccountId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>main.apartment_account.apartment_id</code>.
     */
    public void setApartmentId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>main.apartment_account.apartment_id</code>.
     */
    public Long getApartmentId() {
        return (Long) get(1);
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Long, Long> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Long, Long> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return ApartmentAccount.APARTMENT_ACCOUNT.ACCOUNT_ID;
    }

    @Override
    public Field<Long> field2() {
        return ApartmentAccount.APARTMENT_ACCOUNT.APARTMENT_ID;
    }

    @Override
    public Long component1() {
        return getAccountId();
    }

    @Override
    public Long component2() {
        return getApartmentId();
    }

    @Override
    public Long value1() {
        return getAccountId();
    }

    @Override
    public Long value2() {
        return getApartmentId();
    }

    @Override
    public ApartmentAccountRecord value1(Long value) {
        setAccountId(value);
        return this;
    }

    @Override
    public ApartmentAccountRecord value2(Long value) {
        setApartmentId(value);
        return this;
    }

    @Override
    public ApartmentAccountRecord values(Long value1, Long value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ApartmentAccountRecord
     */
    public ApartmentAccountRecord() {
        super(ApartmentAccount.APARTMENT_ACCOUNT);
    }

    /**
     * Create a detached, initialised ApartmentAccountRecord
     */
    public ApartmentAccountRecord(Long accountId, Long apartmentId) {
        super(ApartmentAccount.APARTMENT_ACCOUNT);

        setAccountId(accountId);
        setApartmentId(apartmentId);
    }

    /**
     * Create a detached, initialised ApartmentAccountRecord
     */
    public ApartmentAccountRecord(org.ua.wohnung.bot.persistence.generated.tables.pojos.ApartmentAccount value) {
        super(ApartmentAccount.APARTMENT_ACCOUNT);

        if (value != null) {
            setAccountId(value.getAccountId());
            setApartmentId(value.getApartmentId());
        }
    }
}
