/*
 * This file is generated by jOOQ.
 */
package org.ua.wohnung.bot.persistence.generated.tables.records;


import java.time.OffsetDateTime;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;
import org.ua.wohnung.bot.persistence.generated.tables.ApartmentAccount;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ApartmentAccountRecord extends UpdatableRecordImpl<ApartmentAccountRecord> implements Record3<Long, String, OffsetDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>main.apartment_account.account_id</code>.
     */
    public void setAccountId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>main.apartment_account.account_id</code>.
     */
    public Long getAccountId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>main.apartment_account.apartment_id</code>.
     */
    public void setApartmentId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>main.apartment_account.apartment_id</code>.
     */
    public String getApartmentId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>main.apartment_account.apply_ts</code>.
     */
    public void setApplyTs(OffsetDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>main.apartment_account.apply_ts</code>.
     */
    public OffsetDateTime getApplyTs() {
        return (OffsetDateTime) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Long, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, String, OffsetDateTime> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Long, String, OffsetDateTime> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return ApartmentAccount.APARTMENT_ACCOUNT.ACCOUNT_ID;
    }

    @Override
    public Field<String> field2() {
        return ApartmentAccount.APARTMENT_ACCOUNT.APARTMENT_ID;
    }

    @Override
    public Field<OffsetDateTime> field3() {
        return ApartmentAccount.APARTMENT_ACCOUNT.APPLY_TS;
    }

    @Override
    public Long component1() {
        return getAccountId();
    }

    @Override
    public String component2() {
        return getApartmentId();
    }

    @Override
    public OffsetDateTime component3() {
        return getApplyTs();
    }

    @Override
    public Long value1() {
        return getAccountId();
    }

    @Override
    public String value2() {
        return getApartmentId();
    }

    @Override
    public OffsetDateTime value3() {
        return getApplyTs();
    }

    @Override
    public ApartmentAccountRecord value1(Long value) {
        setAccountId(value);
        return this;
    }

    @Override
    public ApartmentAccountRecord value2(String value) {
        setApartmentId(value);
        return this;
    }

    @Override
    public ApartmentAccountRecord value3(OffsetDateTime value) {
        setApplyTs(value);
        return this;
    }

    @Override
    public ApartmentAccountRecord values(Long value1, String value2, OffsetDateTime value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ApartmentAccountRecord
     */
    public ApartmentAccountRecord() {
        super(ApartmentAccount.APARTMENT_ACCOUNT);
    }

    /**
     * Create a detached, initialised ApartmentAccountRecord
     */
    public ApartmentAccountRecord(Long accountId, String apartmentId, OffsetDateTime applyTs) {
        super(ApartmentAccount.APARTMENT_ACCOUNT);

        setAccountId(accountId);
        setApartmentId(apartmentId);
        setApplyTs(applyTs);
    }

    /**
     * Create a detached, initialised ApartmentAccountRecord
     */
    public ApartmentAccountRecord(org.ua.wohnung.bot.persistence.generated.tables.pojos.ApartmentAccount value) {
        super(ApartmentAccount.APARTMENT_ACCOUNT);

        if (value != null) {
            setAccountId(value.getAccountId());
            setApartmentId(value.getApartmentId());
            setApplyTs(value.getApplyTs());
        }
    }
}
