package org.ua.wohnung.bot.exception

import org.ua.wohnung.bot.persistence.generated.enums.Role

abstract class WohnungsBotException(message: String, open val userMessage: String = "", cause: Throwable? = null) :
    Throwable(message, cause)

sealed class ServiceException(
    message: String,
    override val userMessage: String = "‚ùå –ü–æ–º–∏–ª–∫–∞ —Å–∏—Å—Ç–µ–º–∏. –ú–∏ —Å–ø—Ä–æ–±—É—î–º–æ —ó—ó –ø–æ–ª–∞–≥–æ–¥–∏—Ç–∏. –°–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –ë–æ—Ç–∞ —á–µ—Ä–µ–∑ –¥–µ—è–∫–∏–π —á–∞—Å",
    val finishSession: Boolean = true,
    cause: Throwable? = null
) : WohnungsBotException(message, userMessage, cause) {

    class UnreadableMessage(updateId: Int) : ServiceException("Message unreadable, $updateId")
    class UserNotFound(val userId: Long) :
        ServiceException("User not found: $userId", "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∏–π: $userId")

    class UsernameNotFound(val userId: Long) :
        ServiceException(
            message = "Username not found: $userId",
            userMessage =
            """
                ‚ùå –ü–æ–º–∏–ª–∫–∞! –ù–∞–ª–∞—à—Ç—É–π—Ç–µ —Å–≤—ñ–π –ø—Å–µ–≤–¥–æ–Ω—ñ–º (username) –≤ –¢–µ–ª–µ–≥—Ä–∞–º—ñ —ñ —Å–ø—Ä–æ–±—É–π—Ç–µ –∑–Ω–æ–≤—É. –î–∏–≤—ñ—Ç—å—Å—è —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—é —Ç—É—Ç: 
                
                üçè–î–ª—è Iphone (IOS):  https://www.youtube.com/shorts/Md79GzTsZn0

                ü§ñ–î–ª—è Android:  https://youtu.be/AJCzF7sPoI0

                üíª–î–ª—è –∫–æ–º–ø'—é—Ç–µ—Ä—ñ–≤/–Ω–æ—É—Ç–±—É–∫—ñ–≤ –Ω–∞ Windows: https://www.youtube.com/watch?v=Q4AUj84oDlA

                üñ•–î–ª—è –∫–æ–º–ø'—é—Ç–µ—Ä—ñ–≤/–Ω–æ—É—Ç–±—É–∫—ñ–≤ –≤—ñ–¥ Apple: https://www.youtube.com/watch?v=XfqBIcoK2Yk
            """.trimIndent()
        )

    class AccessViolation(val userId: Long, actualRole: Role?, vararg expectedRole: Role) :
        ServiceException(
            "User $userId should have $expectedRole, but actual was $actualRole. Operation denied",
            "–î–æ—Å—Ç—É–ø –∑–∞–±–æ—Ä–æ–Ω–µ–Ω–æ"
        )
}

sealed class SheetValidationException(message: String, cause: Throwable? = null) :
    WohnungsBotException(message, "", cause) {
    class InvalidApartmentId(val id: String) : SheetValidationException("Invalid apartment id: $id")
    class InvalidBundesLand(bundesLand: String, rowId: String) :
        SheetValidationException("Invalid Bundesland: $bundesLand, rowId: $rowId")
}
